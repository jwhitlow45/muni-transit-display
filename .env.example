# Variables set to non-empty strings ("<value>") are required
# Variables set to empty strings ("") are optional

# OpenData511 Configuration
# Get token here - https://511.org/open-data/token
#
# OpenData511 is not responding to requests for rate limit increases, meaning if you want to monitor more than one
# stop per minute you must use an additional API key. Please use this responsibly and do not abuse their API.
#
# Only OPEN_DATA_511_API_KEY_0 is required, but OPEN_DATA_511_API_KEY_1 can be provided to "double" the program's rate
# limit from 60 to 120 requests per minute. All stopcodes are checked every REFRESH_API_INTERVAL_SECONDS, so the minimum
# REFRESH_API_INTERVAL_SECONDS can be calculated as:
# (length of OPEN_DATA_511_STOPCODES * 60) / number of API keys provided 
# 
# It is recommended to give yourself a few extra seconds as a buffer
OPEN_DATA_511_API_KEY_0="<api-key>"
OPEN_DATA_511_API_KEY_1=""
# Get desired agency id using your token from the following api response - https://api.511.org/transit/operators?api_key=<api-key>
OPEN_DATA_511_AGENCY_ID="<agency-id>"
# Comma-delimited list of stopcodes to fetch
OPEN_DATA_511_STOPCODES="<stopcode-0>,<stopcode-1>"

# LED Matrix configuration
# Panel configuration - https://github.com/hzeller/rpi-rgb-led-matrix?tab=readme-ov-file#types-of-displays
LED_MATRIX_ROWS="<integer>"
LED_MATRIX_COLS="<integer>"
LED_MATRIX_CHAIN_LENGTH="<integer>"
LED_MATRIX_PARALLEL="<integer>"
# GPIO speed - https://github.com/hzeller/rpi-rgb-led-matrix?tab=readme-ov-file#gpio-speed
LED_MATRIX_GPIO_SLOWDOWN="<integer>"
# Hardware mappings - https://github.com/hzeller/rpi-rgb-led-matrix/blob/master/wiring.md#alternative-hardware-mappings
LED_MATRIX_HARDWARE_MAPPING="<hardware-mapping>"
# Brightness - https://github.com/hzeller/rpi-rgb-led-matrix?tab=readme-ov-file#misc-options
LED_MATRIX_MAX_BRIGHTNESS="<integer>"

# Refresh interval configuration
# API refresh interval - how often the API should make a request (recommended: 65)
REFRESH_API_INTERVAL_SECONDS="<integer>"
# Display refresh interval - how often the display should update what it displays (recommended: 5)
REFRESH_DISPLAY_INTERVAL_SECONDS="<integer>"

# Line disambiguation symbols (optional)
# When multiple transit lines share the same reference but travel in different directions (or serve different stops),
# you can use these variables to assign unique symbols next to line references on your display.
#
# 1. LINE_REFERENCES
# Comma-separated list of line references that need disambiguation.
# List each line as it appears at each stop needing a symbol.
# If line 1 and line 2 both serve stops A and B, but in different directions, you might have:
#   LINE_REFERENCES="1,2,1,2"
#
# 2. LINE_STOPCODES
# Comma-separated list of stopcodes corresponding to each entry in LINE_REFERENCES.
# Each entry matches up to a corresponding entry at the same position in LINE_REFERENCES.
# If the first two entries are for stop A and the next two for stop B:
#   LINE_STOPCODES="A,A,B,B"
#
# 3. LINE_SYMBOLS
# Comma-separated list of symbols (like N, S, E, W) to display for each line/stop combination.
# Each symbol matches the same position as in the other two variables.
# If line 1 at stop A is northbound, line 2 at stop A is westbound, line 1 at stop B is southbound,
# and line 2 at stop B is eastbound:
#   LINE_SYMBOLS="N,W,S,E"
# NOTE: these can be whatever you want, including arrows or even multiple characters,
# just ensure there is room on your display
#
# Putting It All Together
# Each position in the three lists corresponds to a unique (line, stop) pair and its symbol:
#
# LINE_REFERENCES	LINE_STOPCODES	LINE_SYMBOLS
#       1                 A               N
#       2                 A               W
#       1                 B               S
#       2                 B               E
#
# Make sure all three variables have the same number of entries, and that each entry lines up across the lists.
#
# Example configuration:
#   LINE_REFERENCES="1,2,1,2"
#   LINE_STOPCODES="A,A,B,B"
#   LINE_SYMBOLS="N,W,S,E"
# Example output:
#   1N 10 20
#   2W 10 20
#   1S 10 20
#   2E 10 20
#
# If only some lines require disambiguation those which don't can be omitted but spacing may be affected. Spaces (" ")
# can be used as a blank to keep stops which don't have disambiguation in alignment with those that do.
#
# Example configuration where Stopcode B services line 2 and 3:
#   LINE_REFERENCES="1,2,1"
#   LINE_STOPCODES="A,A,B"
#   LINE_SYMBOLS="N,W,S"
# Example output:
#   1N 10 20
#   2W 10 20
#   1S 10 20
#   3 10 20
#
# Example configuration where Stopcode B services line 2 and 3 with spacing:
#   LINE_REFERENCES="1,2,1,3"
#   LINE_STOPCODES="A,A,B,B"
#   LINE_SYMBOLS="N,W,S, "
# Example output:
#   1N 10 20
#   2W 10 20
#   1S 10 20
#   3  10 20
LINE_REFERENCES=""
LINE_STOPCODES=""
LINE_SYMBOLS=""

